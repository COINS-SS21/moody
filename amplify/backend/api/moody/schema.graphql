type Rating @model @key(name: "byMeeting", fields: ["meetingID"]) @auth(rules: [{allow: owner, operations: [read]}, {allow: public, operations: [create], provider: iam}]) {
  id: ID!
  overallStars: Int!
  meetingID: ID
}

type Meeting @model(timestamps: {createdAt: "createdAt", updatedAt: "updatedAt"}) @auth(rules: [{allow: owner, operations: [read, create, update, delete]}]) {
  id: ID!
  name: String!
  AudienceFaceExpressions: [AudienceFaceExpression] @connection(keyName: "byMeeting", fields: ["id"])
  startedAt: AWSDateTime
  stoppedAt: AWSDateTime
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  Ratings: [Rating] @connection(keyName: "byMeeting", fields: ["id"])
}

type AudienceFaceExpression @model(timestamps: {createdAt: "createdAt", updatedAt: "updatedAt"}) @key(name: "byMeeting", fields: ["meetingID"]) @auth(rules: [{allow: owner, operations: [read, create, update, delete]}]) {
  id: ID!
  timestamp: AWSTimestamp!
  score: Float!
  meetingID: ID!
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}
